server.port=8180
jdbc.url=jdbc:mysql://localhost:3306/play?serverTimezone=UTC
jdbc.username=root
jdbc.password=12345678
redis.host = 127.0.0.1
redis.port = 6379
#########################################################
#       Spring配置的数据库连接                          #
#########################################################
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${jdbc.url}
spring.datasource.username=${jdbc.username}
spring.datasource.password=${jdbc.password}
#########################################################
#                   Druid                              #
#########################################################
#初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
spring.datasource.initialSize=1
#最小连接池数量(已经失效)
spring.datasource.minIdle=1
#最大连接池数量
spring.datasource.maxActive=20

#配置获取连接等待超时的时间获取连接时最大等待时间，单位毫秒。
#配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如
#果需要可以通过配置useUnfairLock属性为true使用非公平锁。
spring.datasource.maxWait=60000

#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
# 有两个含义：
#1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
#2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
spring.datasource.timeBetweenEvictionRunsMillis=60000

#处理失效连接，建议配置为true，不影响性能，并且保证安全性。
#申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.testWhileIdle=true

#配置一个连接保持空闲而不被驱逐的最小和最大时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=600000
spring.datasource.maxEvictableIdleTimeMillis=900000

#用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
#如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
spring.datasource.validationQuery=select 1

#是否检测池里的连接可用，申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.testOnBorrow=false

#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.testOnReturn=false
#配置监控统计拦截的filters，WallFilter防注入，StatFilter是用于统计监控信息
#通过filters属性配置了Filters属性 encoding是EncodingConvertFilter的别名
spring.datasource.filters=stat,wall,encoding,config
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#使用EncodingConvertFilter：clientEncoding=UTF-8;serverEncoding=ISO-8859-1
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=10000;clientEncoding=UTF-8;serverEncoding=ISO-8859-1;config.file=D://druid-pool.properties
#设置慢Sql的阈值时间 毫秒
#spring.datasource.slowSqlMillis=10000
druid.allow.ip=127.0.0.1
druid.login.user_name=root
druid.login.password=root
#druid的网址：http://localhost:8180/druid/sql.html
#########################################################
#                   MyBbatis                            #
#########################################################
mybatis.mapperLocations=classpath*:mapper/*.xml
#########################################################
#                  Redis                                #
#########################################################
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=${redis.host}
# Redis服务器连接端口
spring.redis.port=${redis.port}
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=200
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait = -1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=1000
#########################################################
#                    RabbitMQ配置信息                     #
#########################################################
rabbitmq.host = 127.0.0.1
rabbitmq.port = 6379
rabbitmq.username = guest
rabbitmq.password = guest
spring.rabbitmq.host=${redis.host}
spring.rabbitmq.port=${redis.port}
spring.rabbitmq.username=${rabbitmq.username}
spring.rabbitmq.password=${rabbitmq.password}
spring.rabbitmq.virtual-host=/
# 消息发送到交换机确认机制,是否确认回调
spring.rabbitmq.publisher-confirms=true 
spring.rabbitmq.publisher-returns=true